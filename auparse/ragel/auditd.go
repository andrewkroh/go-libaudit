
//line auditd.go.rl:1
// Code generated by ragel DO NOT EDIT.
package ragel

import (
    "fmt"
    "strconv"
)


//line auditd.go.rl:109



//line auditd.go:17
var _eof_actions []byte = []byte{
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 12, 14, 12, 12, 14, 12, 
	12, 12, 14, 12, 12, 14, 12, 12, 
}

const start int = 1
const first_final int = 82

const en_main int = 1
const en_inner_kvs int = 63


//line auditd.go.rl:112

// unpack unpacks an auditd message.
func (m *Message) unpack(data string) error {
    if err := m.unpackData(data, en_main); err != nil {
        return err
    }
    if m.Values == nil {
        return nil
    }
    if msg, found := m.Values["msg"]; found {
        if err := m.unpackData(msg, en_inner_kvs); err != nil {
            return fmt.Errorf("error parsing user msg %q: %w", msg, err)
        }
        delete(m.Values, "msg")
    }
    return nil
}

func (m *Message) unpackData(data string, machine int) error {
    p := 0
    pb := 0
    pe := len(data)
    eof := len(data)
    cs := machine

    msg_start := 0
    var key, value string
    
//line auditd.go:69
	{
	if p == pe {
		goto _test_eof
	}
	if cs == 0 {
		goto _out
	}
_resume:
	switch cs {
	case 1:
		if data[p] == 116 {
			goto tr0;
		}
		goto tr1;
	case 0:
		goto _out
	case 2:
		if data[p] == 121 {
			goto tr2;
		}
		goto tr1;
	case 3:
		if data[p] == 112 {
			goto tr3;
		}
		goto tr1;
	case 4:
		if data[p] == 101 {
			goto tr4;
		}
		goto tr1;
	case 5:
		if data[p] == 61 {
			goto tr5;
		}
		goto tr1;
	case 6:
		switch data[p] {
		case 85:
			goto tr7;
		case 95:
			goto tr6;
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto tr6;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr6;
			}
		default:
			goto tr6;
		}
		goto tr1;
	case 7:
		switch data[p] {
		case 32:
			goto tr8;
		case 95:
			goto tr9;
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto tr9;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr9;
			}
		default:
			goto tr9;
		}
		goto tr1;
	case 8:
		if data[p] == 109 {
			goto tr10;
		}
		goto tr1;
	case 9:
		if data[p] == 115 {
			goto tr11;
		}
		goto tr1;
	case 10:
		if data[p] == 103 {
			goto tr12;
		}
		goto tr1;
	case 11:
		if data[p] == 61 {
			goto tr13;
		}
		goto tr1;
	case 12:
		if data[p] == 97 {
			goto tr14;
		}
		goto tr1;
	case 13:
		if data[p] == 117 {
			goto tr15;
		}
		goto tr1;
	case 14:
		if data[p] == 100 {
			goto tr16;
		}
		goto tr1;
	case 15:
		if data[p] == 105 {
			goto tr17;
		}
		goto tr1;
	case 16:
		if data[p] == 116 {
			goto tr18;
		}
		goto tr1;
	case 17:
		if data[p] == 40 {
			goto tr19;
		}
		goto tr1;
	case 18:
		if 48 <= data[p] && data[p] <= 57 {
			goto tr20;
		}
		goto tr1;
	case 19:
		if data[p] == 46 {
			goto tr21;
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr22;
		}
		goto tr1;
	case 20:
		if 48 <= data[p] && data[p] <= 57 {
			goto tr23;
		}
		goto tr1;
	case 21:
		if 48 <= data[p] && data[p] <= 57 {
			goto tr24;
		}
		goto tr1;
	case 22:
		if 48 <= data[p] && data[p] <= 57 {
			goto tr25;
		}
		goto tr1;
	case 23:
		if data[p] == 58 {
			goto tr26;
		}
		goto tr1;
	case 24:
		if 48 <= data[p] && data[p] <= 57 {
			goto tr27;
		}
		goto tr1;
	case 25:
		if data[p] == 41 {
			goto tr28;
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr29;
		}
		goto tr1;
	case 26:
		if data[p] == 58 {
			goto tr30;
		}
		goto tr1;
	case 27:
		if data[p] == 32 {
			goto tr31;
		}
		if 9 <= data[p] && data[p] <= 13 {
			goto tr31;
		}
		goto tr1;
	case 28:
		if data[p] == 32 {
			goto tr33;
		}
		switch {
		case data[p] < 65:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr32;
				}
			case data[p] > 60:
				if 62 <= data[p] && data[p] <= 64 {
					goto tr34;
				}
			default:
				goto tr34;
			}
		case data[p] > 90:
			switch {
			case data[p] < 97:
				if 91 <= data[p] && data[p] <= 96 {
					goto tr34;
				}
			case data[p] > 122:
				if 123 <= data[p] && data[p] <= 126 {
					goto tr34;
				}
			default:
				goto tr35;
			}
		default:
			goto tr35;
		}
		goto tr1;
	case 29:
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr36;
			}
		case data[p] >= 65:
			goto tr36;
		}
		goto tr1;
	case 30:
		switch data[p] {
		case 32:
			goto tr37;
		case 45:
			goto tr37;
		case 95:
			goto tr37;
		}
		switch {
		case data[p] < 48:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr37;
			}
		case data[p] > 57:
			switch {
			case data[p] > 90:
				if 97 <= data[p] && data[p] <= 122 {
					goto tr37;
				}
			case data[p] >= 65:
				goto tr37;
			}
		default:
			goto tr37;
		}
		goto tr1;
	case 31:
		switch data[p] {
		case 32:
			goto tr37;
		case 45:
			goto tr37;
		case 61:
			goto tr38;
		case 95:
			goto tr37;
		}
		switch {
		case data[p] < 48:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr37;
			}
		case data[p] > 57:
			switch {
			case data[p] > 90:
				if 97 <= data[p] && data[p] <= 122 {
					goto tr37;
				}
			case data[p] >= 65:
				goto tr37;
			}
		default:
			goto tr37;
		}
		goto tr1;
	case 82:
		switch data[p] {
		case 32:
			goto tr107;
		case 34:
			goto tr109;
		case 39:
			goto tr110;
		case 44:
			goto tr111;
		}
		switch {
		case data[p] > 13:
			if 33 <= data[p] && data[p] <= 126 {
				goto tr108;
			}
		case data[p] >= 9:
			goto tr107;
		}
		goto tr1;
	case 32:
		switch data[p] {
		case 32:
			goto tr39;
		case 40:
			goto tr40;
		case 44:
			goto tr41;
		case 58:
			goto tr41;
		}
		switch {
		case data[p] < 65:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr39;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr42;
			}
		default:
			goto tr42;
		}
		goto tr1;
	case 33:
		switch data[p] {
		case 32:
			goto tr39;
		case 44:
			goto tr41;
		}
		switch {
		case data[p] < 65:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr39;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr42;
			}
		default:
			goto tr42;
		}
		goto tr1;
	case 34:
		if data[p] == 32 {
			goto tr40;
		}
		if 9 <= data[p] && data[p] <= 13 {
			goto tr40;
		}
		goto tr1;
	case 83:
		switch data[p] {
		case 32:
			goto tr112;
		case 33:
			goto tr113;
		case 44:
			goto tr114;
		}
		switch {
		case data[p] < 35:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr112;
			}
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr113;
			}
		default:
			goto tr113;
		}
		goto tr1;
	case 35:
		if data[p] == 34 {
			goto tr44;
		}
		switch {
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr43;
			}
		case data[p] >= 32:
			goto tr43;
		}
		goto tr1;
	case 36:
		if data[p] == 34 {
			goto tr46;
		}
		switch {
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr45;
			}
		case data[p] >= 32:
			goto tr45;
		}
		goto tr1;
	case 84:
		switch data[p] {
		case 32:
			goto tr115;
		case 34:
			goto tr46;
		case 44:
			goto tr116;
		}
		switch {
		case data[p] < 33:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr107;
			}
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr45;
			}
		default:
			goto tr45;
		}
		goto tr1;
	case 37:
		switch data[p] {
		case 32:
			goto tr47;
		case 34:
			goto tr46;
		case 40:
			goto tr48;
		case 44:
			goto tr49;
		case 58:
			goto tr49;
		}
		switch {
		case data[p] < 65:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr39;
				}
			case data[p] > 38:
				if 41 <= data[p] && data[p] <= 64 {
					goto tr45;
				}
			default:
				goto tr45;
			}
		case data[p] > 90:
			switch {
			case data[p] < 97:
				if 91 <= data[p] && data[p] <= 96 {
					goto tr45;
				}
			case data[p] > 122:
				if 123 <= data[p] && data[p] <= 126 {
					goto tr45;
				}
			default:
				goto tr50;
			}
		default:
			goto tr50;
		}
		goto tr1;
	case 38:
		switch data[p] {
		case 32:
			goto tr47;
		case 34:
			goto tr46;
		case 44:
			goto tr49;
		}
		switch {
		case data[p] < 65:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr39;
				}
			case data[p] > 38:
				if 40 <= data[p] && data[p] <= 64 {
					goto tr45;
				}
			default:
				goto tr45;
			}
		case data[p] > 90:
			switch {
			case data[p] < 97:
				if 91 <= data[p] && data[p] <= 96 {
					goto tr45;
				}
			case data[p] > 122:
				if 123 <= data[p] && data[p] <= 126 {
					goto tr45;
				}
			default:
				goto tr50;
			}
		default:
			goto tr50;
		}
		goto tr1;
	case 39:
		switch data[p] {
		case 32:
			goto tr48;
		case 34:
			goto tr46;
		}
		switch {
		case data[p] < 33:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr40;
			}
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr45;
			}
		default:
			goto tr45;
		}
		goto tr1;
	case 40:
		switch data[p] {
		case 32:
			goto tr51;
		case 34:
			goto tr46;
		case 45:
			goto tr51;
		case 95:
			goto tr51;
		}
		switch {
		case data[p] < 58:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr37;
				}
			case data[p] > 38:
				switch {
				case data[p] > 47:
					if 48 <= data[p] && data[p] <= 57 {
						goto tr51;
					}
				case data[p] >= 40:
					goto tr45;
				}
			default:
				goto tr45;
			}
		case data[p] > 64:
			switch {
			case data[p] < 91:
				if 65 <= data[p] && data[p] <= 90 {
					goto tr51;
				}
			case data[p] > 96:
				switch {
				case data[p] > 122:
					if 123 <= data[p] && data[p] <= 126 {
						goto tr45;
					}
				case data[p] >= 97:
					goto tr51;
				}
			default:
				goto tr45;
			}
		default:
			goto tr45;
		}
		goto tr1;
	case 41:
		switch data[p] {
		case 32:
			goto tr51;
		case 34:
			goto tr46;
		case 45:
			goto tr51;
		case 61:
			goto tr52;
		case 95:
			goto tr51;
		}
		switch {
		case data[p] < 58:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr37;
				}
			case data[p] > 38:
				switch {
				case data[p] > 47:
					if 48 <= data[p] && data[p] <= 57 {
						goto tr51;
					}
				case data[p] >= 40:
					goto tr45;
				}
			default:
				goto tr45;
			}
		case data[p] > 64:
			switch {
			case data[p] < 91:
				if 65 <= data[p] && data[p] <= 90 {
					goto tr51;
				}
			case data[p] > 96:
				switch {
				case data[p] > 122:
					if 123 <= data[p] && data[p] <= 126 {
						goto tr45;
					}
				case data[p] >= 97:
					goto tr51;
				}
			default:
				goto tr45;
			}
		default:
			goto tr45;
		}
		goto tr1;
	case 85:
		switch data[p] {
		case 32:
			goto tr115;
		case 34:
			goto tr118;
		case 39:
			goto tr110;
		case 44:
			goto tr119;
		}
		switch {
		case data[p] > 13:
			if 33 <= data[p] && data[p] <= 126 {
				goto tr117;
			}
		case data[p] >= 9:
			goto tr107;
		}
		goto tr1;
	case 86:
		switch data[p] {
		case 32:
			goto tr120;
		case 34:
			goto tr46;
		case 44:
			goto tr122;
		}
		switch {
		case data[p] < 33:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr112;
			}
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr121;
			}
		default:
			goto tr121;
		}
		goto tr1;
	case 87:
		switch data[p] {
		case 32:
			goto tr123;
		case 34:
			goto tr44;
		case 44:
			goto tr124;
		}
		switch {
		case data[p] < 33:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr107;
			}
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr43;
			}
		default:
			goto tr43;
		}
		goto tr1;
	case 42:
		if data[p] == 39 {
			goto tr54;
		}
		if 32 <= data[p] && data[p] <= 126 {
			goto tr53;
		}
		goto tr1;
	case 43:
		if data[p] == 39 {
			goto tr56;
		}
		if 32 <= data[p] && data[p] <= 126 {
			goto tr55;
		}
		goto tr1;
	case 88:
		switch data[p] {
		case 32:
			goto tr107;
		case 44:
			goto tr125;
		}
		if 9 <= data[p] && data[p] <= 13 {
			goto tr107;
		}
		goto tr1;
	case 44:
		if data[p] == 32 {
			goto tr58;
		}
		switch {
		case data[p] < 65:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr57;
				}
			case data[p] > 60:
				if 62 <= data[p] && data[p] <= 64 {
					goto tr59;
				}
			default:
				goto tr59;
			}
		case data[p] > 90:
			switch {
			case data[p] < 97:
				if 91 <= data[p] && data[p] <= 96 {
					goto tr59;
				}
			case data[p] > 122:
				if 123 <= data[p] && data[p] <= 126 {
					goto tr59;
				}
			default:
				goto tr60;
			}
		default:
			goto tr60;
		}
		goto tr1;
	case 45:
		if data[p] == 32 {
			goto tr58;
		}
		switch {
		case data[p] < 33:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr57;
			}
		case data[p] > 60:
			if 62 <= data[p] && data[p] <= 126 {
				goto tr59;
			}
		default:
			goto tr59;
		}
		goto tr1;
	case 46:
		switch data[p] {
		case 32:
			goto tr62;
		case 45:
			goto tr63;
		case 95:
			goto tr63;
		}
		switch {
		case data[p] < 62:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr61;
				}
			case data[p] > 47:
				switch {
				case data[p] > 57:
					if 58 <= data[p] && data[p] <= 60 {
						goto tr59;
					}
				case data[p] >= 48:
					goto tr63;
				}
			default:
				goto tr59;
			}
		case data[p] > 64:
			switch {
			case data[p] < 91:
				if 65 <= data[p] && data[p] <= 90 {
					goto tr63;
				}
			case data[p] > 96:
				switch {
				case data[p] > 122:
					if 123 <= data[p] && data[p] <= 126 {
						goto tr59;
					}
				case data[p] >= 97:
					goto tr63;
				}
			default:
				goto tr59;
			}
		default:
			goto tr59;
		}
		goto tr1;
	case 47:
		switch data[p] {
		case 32:
			goto tr37;
		case 45:
			goto tr37;
		case 61:
			goto tr38;
		case 95:
			goto tr37;
		}
		switch {
		case data[p] < 48:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr37;
			}
		case data[p] > 57:
			switch {
			case data[p] > 90:
				if 97 <= data[p] && data[p] <= 122 {
					goto tr64;
				}
			case data[p] >= 65:
				goto tr64;
			}
		default:
			goto tr37;
		}
		goto tr1;
	case 48:
		switch data[p] {
		case 32:
			goto tr62;
		case 45:
			goto tr63;
		case 61:
			goto tr38;
		case 95:
			goto tr63;
		}
		switch {
		case data[p] < 58:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr61;
				}
			case data[p] > 47:
				if 48 <= data[p] && data[p] <= 57 {
					goto tr63;
				}
			default:
				goto tr59;
			}
		case data[p] > 64:
			switch {
			case data[p] < 91:
				if 65 <= data[p] && data[p] <= 90 {
					goto tr65;
				}
			case data[p] > 96:
				switch {
				case data[p] > 122:
					if 123 <= data[p] && data[p] <= 126 {
						goto tr59;
					}
				case data[p] >= 97:
					goto tr65;
				}
			default:
				goto tr59;
			}
		default:
			goto tr59;
		}
		goto tr1;
	case 49:
		switch data[p] {
		case 32:
			goto tr62;
		case 45:
			goto tr63;
		case 61:
			goto tr38;
		case 95:
			goto tr63;
		}
		switch {
		case data[p] < 58:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr61;
				}
			case data[p] > 47:
				if 48 <= data[p] && data[p] <= 57 {
					goto tr63;
				}
			default:
				goto tr59;
			}
		case data[p] > 64:
			switch {
			case data[p] < 91:
				if 65 <= data[p] && data[p] <= 90 {
					goto tr63;
				}
			case data[p] > 96:
				switch {
				case data[p] > 122:
					if 123 <= data[p] && data[p] <= 126 {
						goto tr59;
					}
				case data[p] >= 97:
					goto tr63;
				}
			default:
				goto tr59;
			}
		default:
			goto tr59;
		}
		goto tr1;
	case 50:
		switch data[p] {
		case 32:
			goto tr8;
		case 78:
			goto tr66;
		case 95:
			goto tr9;
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto tr9;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr9;
			}
		default:
			goto tr9;
		}
		goto tr1;
	case 51:
		switch data[p] {
		case 32:
			goto tr8;
		case 75:
			goto tr67;
		case 95:
			goto tr9;
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto tr9;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr9;
			}
		default:
			goto tr9;
		}
		goto tr1;
	case 52:
		switch data[p] {
		case 32:
			goto tr8;
		case 78:
			goto tr68;
		case 95:
			goto tr9;
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto tr9;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr9;
			}
		default:
			goto tr9;
		}
		goto tr1;
	case 53:
		switch data[p] {
		case 32:
			goto tr8;
		case 79:
			goto tr69;
		case 95:
			goto tr9;
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto tr9;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr9;
			}
		default:
			goto tr9;
		}
		goto tr1;
	case 54:
		switch data[p] {
		case 32:
			goto tr8;
		case 87:
			goto tr70;
		case 95:
			goto tr9;
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto tr9;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr9;
			}
		default:
			goto tr9;
		}
		goto tr1;
	case 55:
		switch data[p] {
		case 32:
			goto tr8;
		case 78:
			goto tr71;
		case 95:
			goto tr9;
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto tr9;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr9;
			}
		default:
			goto tr9;
		}
		goto tr1;
	case 56:
		switch data[p] {
		case 32:
			goto tr8;
		case 91:
			goto tr72;
		case 95:
			goto tr9;
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto tr9;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr9;
			}
		default:
			goto tr9;
		}
		goto tr1;
	case 57:
		if 48 <= data[p] && data[p] <= 57 {
			goto tr73;
		}
		goto tr1;
	case 58:
		if 48 <= data[p] && data[p] <= 57 {
			goto tr74;
		}
		goto tr1;
	case 59:
		if 48 <= data[p] && data[p] <= 57 {
			goto tr75;
		}
		goto tr1;
	case 60:
		if 48 <= data[p] && data[p] <= 57 {
			goto tr76;
		}
		goto tr1;
	case 61:
		if data[p] == 93 {
			goto tr77;
		}
		goto tr1;
	case 62:
		if data[p] == 32 {
			goto tr78;
		}
		goto tr1;
	case 63:
		switch {
		case data[p] < 65:
			switch {
			case data[p] < 32:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr79;
				}
			case data[p] > 60:
				if 62 <= data[p] && data[p] <= 64 {
					goto tr80;
				}
			default:
				goto tr80;
			}
		case data[p] > 90:
			switch {
			case data[p] < 97:
				if 91 <= data[p] && data[p] <= 96 {
					goto tr80;
				}
			case data[p] > 122:
				if 123 <= data[p] && data[p] <= 126 {
					goto tr80;
				}
			default:
				goto tr81;
			}
		default:
			goto tr81;
		}
		goto tr1;
	case 64:
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr82;
			}
		case data[p] >= 65:
			goto tr82;
		}
		goto tr1;
	case 65:
		switch data[p] {
		case 32:
			goto tr83;
		case 45:
			goto tr83;
		case 95:
			goto tr83;
		}
		switch {
		case data[p] < 48:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr83;
			}
		case data[p] > 57:
			switch {
			case data[p] > 90:
				if 97 <= data[p] && data[p] <= 122 {
					goto tr83;
				}
			case data[p] >= 65:
				goto tr83;
			}
		default:
			goto tr83;
		}
		goto tr1;
	case 66:
		switch data[p] {
		case 32:
			goto tr83;
		case 45:
			goto tr83;
		case 61:
			goto tr84;
		case 95:
			goto tr83;
		}
		switch {
		case data[p] < 48:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr83;
			}
		case data[p] > 57:
			switch {
			case data[p] > 90:
				if 97 <= data[p] && data[p] <= 122 {
					goto tr83;
				}
			case data[p] >= 65:
				goto tr83;
			}
		default:
			goto tr83;
		}
		goto tr1;
	case 89:
		switch data[p] {
		case 32:
			goto tr126;
		case 34:
			goto tr128;
		case 39:
			goto tr129;
		case 44:
			goto tr130;
		}
		switch {
		case data[p] > 13:
			if 33 <= data[p] && data[p] <= 126 {
				goto tr127;
			}
		case data[p] >= 9:
			goto tr126;
		}
		goto tr1;
	case 67:
		switch data[p] {
		case 32:
			goto tr85;
		case 40:
			goto tr86;
		case 44:
			goto tr87;
		case 58:
			goto tr87;
		}
		switch {
		case data[p] < 65:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr85;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr88;
			}
		default:
			goto tr88;
		}
		goto tr1;
	case 68:
		switch data[p] {
		case 32:
			goto tr85;
		case 44:
			goto tr87;
		}
		switch {
		case data[p] < 65:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr85;
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto tr88;
			}
		default:
			goto tr88;
		}
		goto tr1;
	case 69:
		if data[p] == 32 {
			goto tr86;
		}
		if 9 <= data[p] && data[p] <= 13 {
			goto tr86;
		}
		goto tr1;
	case 90:
		switch data[p] {
		case 32:
			goto tr131;
		case 33:
			goto tr132;
		case 44:
			goto tr133;
		}
		switch {
		case data[p] < 35:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr131;
			}
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr132;
			}
		default:
			goto tr132;
		}
		goto tr1;
	case 70:
		if data[p] == 34 {
			goto tr90;
		}
		switch {
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr89;
			}
		case data[p] >= 32:
			goto tr89;
		}
		goto tr1;
	case 71:
		if data[p] == 34 {
			goto tr92;
		}
		switch {
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr91;
			}
		case data[p] >= 32:
			goto tr91;
		}
		goto tr1;
	case 91:
		switch data[p] {
		case 32:
			goto tr134;
		case 34:
			goto tr92;
		case 44:
			goto tr135;
		}
		switch {
		case data[p] < 33:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr126;
			}
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr91;
			}
		default:
			goto tr91;
		}
		goto tr1;
	case 72:
		switch data[p] {
		case 32:
			goto tr93;
		case 34:
			goto tr92;
		case 40:
			goto tr94;
		case 44:
			goto tr95;
		case 58:
			goto tr95;
		}
		switch {
		case data[p] < 65:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr85;
				}
			case data[p] > 38:
				if 41 <= data[p] && data[p] <= 64 {
					goto tr91;
				}
			default:
				goto tr91;
			}
		case data[p] > 90:
			switch {
			case data[p] < 97:
				if 91 <= data[p] && data[p] <= 96 {
					goto tr91;
				}
			case data[p] > 122:
				if 123 <= data[p] && data[p] <= 126 {
					goto tr91;
				}
			default:
				goto tr96;
			}
		default:
			goto tr96;
		}
		goto tr1;
	case 73:
		switch data[p] {
		case 32:
			goto tr93;
		case 34:
			goto tr92;
		case 44:
			goto tr95;
		}
		switch {
		case data[p] < 65:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr85;
				}
			case data[p] > 38:
				if 40 <= data[p] && data[p] <= 64 {
					goto tr91;
				}
			default:
				goto tr91;
			}
		case data[p] > 90:
			switch {
			case data[p] < 97:
				if 91 <= data[p] && data[p] <= 96 {
					goto tr91;
				}
			case data[p] > 122:
				if 123 <= data[p] && data[p] <= 126 {
					goto tr91;
				}
			default:
				goto tr96;
			}
		default:
			goto tr96;
		}
		goto tr1;
	case 74:
		switch data[p] {
		case 32:
			goto tr94;
		case 34:
			goto tr92;
		}
		switch {
		case data[p] < 33:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr86;
			}
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr91;
			}
		default:
			goto tr91;
		}
		goto tr1;
	case 75:
		switch data[p] {
		case 32:
			goto tr97;
		case 34:
			goto tr92;
		case 45:
			goto tr97;
		case 95:
			goto tr97;
		}
		switch {
		case data[p] < 58:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr83;
				}
			case data[p] > 38:
				switch {
				case data[p] > 47:
					if 48 <= data[p] && data[p] <= 57 {
						goto tr97;
					}
				case data[p] >= 40:
					goto tr91;
				}
			default:
				goto tr91;
			}
		case data[p] > 64:
			switch {
			case data[p] < 91:
				if 65 <= data[p] && data[p] <= 90 {
					goto tr97;
				}
			case data[p] > 96:
				switch {
				case data[p] > 122:
					if 123 <= data[p] && data[p] <= 126 {
						goto tr91;
					}
				case data[p] >= 97:
					goto tr97;
				}
			default:
				goto tr91;
			}
		default:
			goto tr91;
		}
		goto tr1;
	case 76:
		switch data[p] {
		case 32:
			goto tr97;
		case 34:
			goto tr92;
		case 45:
			goto tr97;
		case 61:
			goto tr98;
		case 95:
			goto tr97;
		}
		switch {
		case data[p] < 58:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr83;
				}
			case data[p] > 38:
				switch {
				case data[p] > 47:
					if 48 <= data[p] && data[p] <= 57 {
						goto tr97;
					}
				case data[p] >= 40:
					goto tr91;
				}
			default:
				goto tr91;
			}
		case data[p] > 64:
			switch {
			case data[p] < 91:
				if 65 <= data[p] && data[p] <= 90 {
					goto tr97;
				}
			case data[p] > 96:
				switch {
				case data[p] > 122:
					if 123 <= data[p] && data[p] <= 126 {
						goto tr91;
					}
				case data[p] >= 97:
					goto tr97;
				}
			default:
				goto tr91;
			}
		default:
			goto tr91;
		}
		goto tr1;
	case 92:
		switch data[p] {
		case 32:
			goto tr134;
		case 34:
			goto tr137;
		case 39:
			goto tr129;
		case 44:
			goto tr138;
		}
		switch {
		case data[p] > 13:
			if 33 <= data[p] && data[p] <= 126 {
				goto tr136;
			}
		case data[p] >= 9:
			goto tr126;
		}
		goto tr1;
	case 93:
		switch data[p] {
		case 32:
			goto tr139;
		case 34:
			goto tr92;
		case 44:
			goto tr141;
		}
		switch {
		case data[p] < 33:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr131;
			}
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr140;
			}
		default:
			goto tr140;
		}
		goto tr1;
	case 94:
		switch data[p] {
		case 32:
			goto tr142;
		case 34:
			goto tr90;
		case 44:
			goto tr143;
		}
		switch {
		case data[p] < 33:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr126;
			}
		case data[p] > 38:
			if 40 <= data[p] && data[p] <= 126 {
				goto tr89;
			}
		default:
			goto tr89;
		}
		goto tr1;
	case 77:
		if data[p] == 39 {
			goto tr100;
		}
		if 32 <= data[p] && data[p] <= 126 {
			goto tr99;
		}
		goto tr1;
	case 78:
		if data[p] == 39 {
			goto tr102;
		}
		if 32 <= data[p] && data[p] <= 126 {
			goto tr101;
		}
		goto tr1;
	case 95:
		switch data[p] {
		case 32:
			goto tr126;
		case 44:
			goto tr144;
		}
		if 9 <= data[p] && data[p] <= 13 {
			goto tr126;
		}
		goto tr1;
	case 79:
		switch data[p] {
		case 32:
			goto tr104;
		case 45:
			goto tr104;
		case 95:
			goto tr104;
		}
		switch {
		case data[p] < 62:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr103;
				}
			case data[p] > 47:
				switch {
				case data[p] > 57:
					if 58 <= data[p] && data[p] <= 60 {
						goto tr80;
					}
				case data[p] >= 48:
					goto tr104;
				}
			default:
				goto tr80;
			}
		case data[p] > 64:
			switch {
			case data[p] < 91:
				if 65 <= data[p] && data[p] <= 90 {
					goto tr105;
				}
			case data[p] > 96:
				switch {
				case data[p] > 122:
					if 123 <= data[p] && data[p] <= 126 {
						goto tr80;
					}
				case data[p] >= 97:
					goto tr105;
				}
			default:
				goto tr80;
			}
		default:
			goto tr80;
		}
		goto tr1;
	case 80:
		switch data[p] {
		case 32:
			goto tr83;
		case 45:
			goto tr83;
		case 61:
			goto tr84;
		case 95:
			goto tr83;
		}
		switch {
		case data[p] < 48:
			if 9 <= data[p] && data[p] <= 13 {
				goto tr83;
			}
		case data[p] > 57:
			switch {
			case data[p] > 90:
				if 97 <= data[p] && data[p] <= 122 {
					goto tr106;
				}
			case data[p] >= 65:
				goto tr106;
			}
		default:
			goto tr83;
		}
		goto tr1;
	case 81:
		switch data[p] {
		case 32:
			goto tr104;
		case 45:
			goto tr104;
		case 61:
			goto tr84;
		case 95:
			goto tr104;
		}
		switch {
		case data[p] < 58:
			switch {
			case data[p] < 33:
				if 9 <= data[p] && data[p] <= 13 {
					goto tr103;
				}
			case data[p] > 47:
				if 48 <= data[p] && data[p] <= 57 {
					goto tr104;
				}
			default:
				goto tr80;
			}
		case data[p] > 64:
			switch {
			case data[p] < 91:
				if 65 <= data[p] && data[p] <= 90 {
					goto tr105;
				}
			case data[p] > 96:
				switch {
				case data[p] > 122:
					if 123 <= data[p] && data[p] <= 126 {
						goto tr80;
					}
				case data[p] >= 97:
					goto tr105;
				}
			default:
				goto tr80;
			}
		default:
			goto tr80;
		}
		goto tr1;
	}

	tr1: cs = 0; goto _again
	tr0: cs = 2; goto _again
	tr2: cs = 3; goto _again
	tr3: cs = 4; goto _again
	tr4: cs = 5; goto _again
	tr5: cs = 6; goto _again
	tr9: cs = 7; goto _again
	tr6: cs = 7; goto f0
	tr78: cs = 8; goto _again
	tr8: cs = 8; goto f1
	tr10: cs = 9; goto _again
	tr11: cs = 10; goto _again
	tr12: cs = 11; goto _again
	tr13: cs = 12; goto _again
	tr14: cs = 13; goto _again
	tr15: cs = 14; goto _again
	tr16: cs = 15; goto _again
	tr17: cs = 16; goto _again
	tr18: cs = 17; goto _again
	tr19: cs = 18; goto _again
	tr22: cs = 19; goto _again
	tr20: cs = 19; goto f0
	tr21: cs = 20; goto _again
	tr23: cs = 21; goto _again
	tr24: cs = 22; goto _again
	tr25: cs = 23; goto _again
	tr26: cs = 24; goto f2
	tr29: cs = 25; goto _again
	tr27: cs = 25; goto f0
	tr28: cs = 26; goto f3
	tr30: cs = 27; goto _again
	tr31: cs = 28; goto _again
	tr57: cs = 29; goto _again
	tr32: cs = 29; goto f4
	tr42: cs = 30; goto f0
	tr36: cs = 30; goto f6
	tr37: cs = 31; goto _again
	tr64: cs = 31; goto f6
	tr39: cs = 32; goto _again
	tr107: cs = 32; goto f11
	tr112: cs = 32; goto f13
	tr40: cs = 33; goto _again
	tr41: cs = 34; goto _again
	tr125: cs = 34; goto f11
	tr109: cs = 35; goto _again
	tr45: cs = 36; goto _again
	tr43: cs = 36; goto f0
	tr47: cs = 37; goto _again
	tr115: cs = 37; goto f11
	tr123: cs = 37; goto f12
	tr120: cs = 37; goto f13
	tr48: cs = 38; goto _again
	tr49: cs = 39; goto _again
	tr116: cs = 39; goto f11
	tr124: cs = 39; goto f12
	tr50: cs = 40; goto f0
	tr51: cs = 41; goto _again
	tr110: cs = 42; goto _again
	tr55: cs = 43; goto _again
	tr53: cs = 43; goto f0
	tr58: cs = 44; goto _again
	tr33: cs = 44; goto f4
	tr59: cs = 45; goto _again
	tr34: cs = 45; goto f4
	tr35: cs = 46; goto f5
	tr60: cs = 46; goto f6
	tr61: cs = 47; goto _again
	tr62: cs = 48; goto _again
	tr63: cs = 49; goto _again
	tr65: cs = 49; goto f6
	tr7: cs = 50; goto f0
	tr66: cs = 51; goto _again
	tr67: cs = 52; goto _again
	tr68: cs = 53; goto _again
	tr69: cs = 54; goto _again
	tr70: cs = 55; goto _again
	tr71: cs = 56; goto _again
	tr72: cs = 57; goto _again
	tr73: cs = 58; goto f0
	tr74: cs = 59; goto _again
	tr75: cs = 60; goto _again
	tr76: cs = 61; goto _again
	tr77: cs = 62; goto f10
	tr80: cs = 63; goto _again
	tr79: cs = 64; goto _again
	tr88: cs = 65; goto f0
	tr82: cs = 65; goto f6
	tr83: cs = 66; goto _again
	tr106: cs = 66; goto f6
	tr85: cs = 67; goto _again
	tr126: cs = 67; goto f11
	tr131: cs = 67; goto f13
	tr86: cs = 68; goto _again
	tr87: cs = 69; goto _again
	tr144: cs = 69; goto f11
	tr128: cs = 70; goto _again
	tr91: cs = 71; goto _again
	tr89: cs = 71; goto f0
	tr93: cs = 72; goto _again
	tr134: cs = 72; goto f11
	tr142: cs = 72; goto f12
	tr139: cs = 72; goto f13
	tr94: cs = 73; goto _again
	tr95: cs = 74; goto _again
	tr135: cs = 74; goto f11
	tr143: cs = 74; goto f12
	tr96: cs = 75; goto f0
	tr97: cs = 76; goto _again
	tr129: cs = 77; goto _again
	tr101: cs = 78; goto _again
	tr99: cs = 78; goto f0
	tr81: cs = 79; goto f6
	tr103: cs = 80; goto _again
	tr104: cs = 81; goto _again
	tr105: cs = 81; goto f6
	tr38: cs = 82; goto f7
	tr113: cs = 83; goto _again
	tr108: cs = 83; goto f0
	tr111: cs = 83; goto f12
	tr114: cs = 83; goto f13
	tr44: cs = 84; goto f8
	tr46: cs = 84; goto f9
	tr52: cs = 85; goto f7
	tr121: cs = 86; goto _again
	tr117: cs = 86; goto f0
	tr119: cs = 86; goto f12
	tr122: cs = 86; goto f13
	tr118: cs = 87; goto f9
	tr54: cs = 88; goto f8
	tr56: cs = 88; goto f9
	tr84: cs = 89; goto f7
	tr132: cs = 90; goto _again
	tr127: cs = 90; goto f0
	tr130: cs = 90; goto f12
	tr133: cs = 90; goto f13
	tr90: cs = 91; goto f8
	tr92: cs = 91; goto f9
	tr98: cs = 92; goto f7
	tr140: cs = 93; goto _again
	tr136: cs = 93; goto f0
	tr138: cs = 93; goto f12
	tr141: cs = 93; goto f13
	tr137: cs = 94; goto f9
	tr100: cs = 95; goto f8
	tr102: cs = 95; goto f9

f0:
//line auditd.go.rl:12

    pb = p

	goto _again
f4:
//line auditd.go.rl:16

    msg_start = p

	goto _again
f1:
//line auditd.go.rl:24

    m.Type = string(data[pb:p])

	goto _again
f2:
//line auditd.go.rl:28

    m.Timestamp = string(data[pb:p])

	goto _again
f3:
//line auditd.go.rl:32

    m.Sequence = string(data[pb:p])

	goto _again
f10:
//line auditd.go.rl:36

    if typeId, err := strconv.Atoi(string(data[pb:p])); err == nil {
        m.TypeID = int32(typeId)
    }

	goto _again
f7:
//line auditd.go.rl:42

    key = string(data[pb:p])

	goto _again
f9:
//line auditd.go.rl:46

    value = string(data[pb:p])

	goto _again
f11:
//line auditd.go.rl:50

    if m.Values == nil {
        m.Values = map[string]string{}
    }
    if value != "" {
        m.Values[key] = value
        value = ""
    }

	goto _again
f8:
//line auditd.go.rl:12

    pb = p

//line auditd.go.rl:46

    value = string(data[pb:p])

	goto _again
f12:
//line auditd.go.rl:12

    pb = p

//line auditd.go.rl:50

    if m.Values == nil {
        m.Values = map[string]string{}
    }
    if value != "" {
        m.Values[key] = value
        value = ""
    }

	goto _again
f6:
//line auditd.go.rl:20

    m.Message = string(data[msg_start:p])

//line auditd.go.rl:12

    pb = p

	goto _again
f13:
//line auditd.go.rl:46

    value = string(data[pb:p])

//line auditd.go.rl:50

    if m.Values == nil {
        m.Values = map[string]string{}
    }
    if value != "" {
        m.Values[key] = value
        value = ""
    }

	goto _again
f5:
//line auditd.go.rl:16

    msg_start = p

//line auditd.go.rl:20

    m.Message = string(data[msg_start:p])

//line auditd.go.rl:12

    pb = p

	goto _again

_again:
	if cs == 0 {
		goto _out
	}
	if p++; p != pe {
		goto _resume
	}
	_test_eof: {}
	if p == eof {
		switch _eof_actions[cs] {
		case 12:
//line auditd.go.rl:50

    if m.Values == nil {
        m.Values = map[string]string{}
    }
    if value != "" {
        m.Values[key] = value
        value = ""
    }

		case 14:
//line auditd.go.rl:46

    value = string(data[pb:p])

//line auditd.go.rl:50

    if m.Values == nil {
        m.Values = map[string]string{}
    }
    if value != "" {
        m.Values[key] = value
        value = ""
    }

//line auditd.go:2188
		}
	}

	_out: {}
	}

//line auditd.go.rl:140

    if cs < first_final {
        return fmt.Errorf("error parsing message at pos %d", p+1)
    }
    return nil
}
